{"version":3,"sources":["../../../../src/find/checks/AtomicChecks/ContextIsolationJSCheck.js"],"names":["sourceTypes","severity","confidence","ContextIsolationJSCheck","constructor","id","description","type","JAVASCRIPT","shortenedURL","match","astNode","astHelper","scope","callee","name","location","arguments","length","target","resolveVarValue","contextIsolation","findNodeByType","PropertyName","PropertyDepth","node","key","value","getVarInScope","defs","init","push","line","loc","start","column","HIGH","FIRM","manualReview"],"mappings":"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","file":"ContextIsolationJSCheck.js","sourcesContent":["import { sourceTypes } from '../../../parser/types';\nimport { severity, confidence } from '../../attributes';\n\nexport default class ContextIsolationJSCheck {\n  constructor() {\n    this.id = 'CONTEXT_ISOLATION_JS_CHECK';\n    this.description = `Review the use of the contextIsolation option`;\n    this.type = sourceTypes.JAVASCRIPT;\n    this.shortenedURL = \"https://git.io/Jeu1p\";\n  }\n\n  match(astNode, astHelper, scope){\n    if (astNode.type !== 'NewExpression') return null;\n    if (astNode.callee.name !== 'BrowserWindow' && astNode.callee.name !== 'BrowserView') return null;\n\n    let location = [];\n    if (astNode.arguments.length > 0) {\n\n      var target = scope.resolveVarValue(astNode);\n\n      // astHelper.findNodeByType(target,\n      //   astHelper.PropertyName,\n      //   astHelper.PropertyDepth,\n      //   true, // any preload is enough\n      //   node => (node.key.value === 'preload' || node.key.name === 'preload'));\n\n      const contextIsolation = astHelper.findNodeByType(target,\n        astHelper.PropertyName,\n        astHelper.PropertyDepth,\n        false,\n        node => (node.key.value === 'contextIsolation' || node.key.name === 'contextIsolation'));\n\n      //At the time of writing this check, you always need contextIsolation (trust us!)  \n      //if (preload.length > 0) { \n      if (contextIsolation.length > 0) {\n        for (const node of contextIsolation) {\n\n          if (node.value.type === \"Identifier\") {\n            var target = scope.getVarInScope(node.value.name);\n            if ((!target || target.defs.length == 0 || !target.defs[0].node.init || !target.defs[0].node.init.value) || // e.g. var variable; declared but not assigned or assigned later in an undefined way\n                (target && target.defs[0].node.init && target.defs[0].node.init.value !== true)) // e.g. var variable = true; declared and assigned on creation, the only case we can afford to detect atm\n               location.push({ line: node.key.loc.start.line, column: node.key.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.HIGH, confidence: confidence.FIRM, manualReview: false });\n          } else if(node.value.value !== true) {\n          // in practice if there are two keys with the same name, the value of the last one wins\n          // but technically it is an invalid json\n          // just to be on the safe side show a warning if any value is insecure\n            location.push({ line: node.key.loc.start.line, column: node.key.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.HIGH, confidence: confidence.FIRM, manualReview: false });\n          }\n        }\n      } else {\n        location.push({ line: astNode.loc.start.line, column: astNode.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.HIGH, confidence: confidence.FIRM, manualReview: false });\n      }\n      \n    } else {\n      //No webpreferences\n      location.push({ line: astNode.loc.start.line, column: astNode.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.HIGH, confidence: confidence.FIRM, manualReview: false });\n    }\n\n    return location;\n  }\n}"]}