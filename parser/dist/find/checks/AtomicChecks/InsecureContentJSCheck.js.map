{"version":3,"sources":["../../../../src/find/checks/AtomicChecks/InsecureContentJSCheck.js"],"names":["sourceTypes","severity","confidence","InsecureContentJSCheck","constructor","id","description","type","JAVASCRIPT","shortenedURL","match","astNode","astHelper","scope","callee","name","location","arguments","length","target","resolveVarValue","found_nodes","findNodeByType","PropertyName","PropertyDepth","node","key","value","push","line","loc","start","column","MEDIUM","CERTAIN","manualReview"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;AAEA,eAAe,MAAMC,sBAAN,CAA6B;AAC1CC,gBAAc;AACZ,SAAKC,EAAL,GAAU,2BAAV;AACA,SAAKC,WAAL,GAAoB,wCAApB;AACA,SAAKC,IAAL,GAAYP,YAAYQ,UAAxB;AACA,SAAKC,YAAL,GAAoB,sBAApB;AACD;;AAEDC,QAAMC,OAAN,EAAeC,SAAf,EAA0BC,KAA1B,EAAgC;AAC9B,QAAIF,QAAQJ,IAAR,KAAiB,eAArB,EAAsC,OAAO,IAAP;AACtC,QAAII,QAAQG,MAAR,CAAeC,IAAf,KAAwB,eAAxB,IAA2CJ,QAAQG,MAAR,CAAeC,IAAf,KAAwB,aAAvE,EAAsF,OAAO,IAAP;;AAEtF,QAAIC,WAAW,EAAf;;AAEA,QAAIL,QAAQM,SAAR,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;;AAEhC,UAAIC,SAASN,MAAMO,eAAN,CAAsBT,OAAtB,CAAb;;AAEA,YAAMU,cAAcT,UAAUU,cAAV,CAAyBH,MAAzB,EAClBP,UAAUW,YADQ,EAElBX,UAAUY,aAFQ,EAGlB,KAHkB,EAIlBC,QAASA,KAAKC,GAAL,CAASC,KAAT,KAAmB,6BAAnB,IAAoDF,KAAKC,GAAL,CAASX,IAAT,KAAkB,6BAJ7D,CAApB;;AAMA,WAAK,MAAMU,IAAX,IAAmBJ,WAAnB,EAAgC;AAC9B,YAAII,KAAKE,KAAL,CAAWA,KAAX,KAAqB,IAAzB,EAA+B;AAC7BX,mBAASY,IAAT,CAAc,EAAEC,MAAMJ,KAAKC,GAAL,CAASI,GAAT,CAAaC,KAAb,CAAmBF,IAA3B,EAAiCG,QAAQP,KAAKC,GAAL,CAASI,GAAT,CAAaC,KAAb,CAAmBC,MAA5D,EAAoE3B,IAAI,KAAKA,EAA7E,EAAiFC,aAAa,KAAKA,WAAnG,EAAgHG,cAAc,KAAKA,YAAnI,EAAiJR,UAAUA,SAASgC,MAApK,EAA4K/B,YAAYA,WAAWgC,OAAnM,EAA4MC,cAAc,KAA1N,EAAd;AACD;AACF;AACF;;AAED,WAAOnB,QAAP;AACD;AAhCyC","file":"InsecureContentJSCheck.js","sourcesContent":["import { sourceTypes } from '../../../parser/types';\nimport { severity, confidence } from '../../attributes';\n\nexport default class InsecureContentJSCheck {\n  constructor() {\n    this.id = 'INSECURE_CONTENT_JS_CHECK';\n    this.description = `Do not allow insecure HTTP connections`;\n    this.type = sourceTypes.JAVASCRIPT;\n    this.shortenedURL = \"https://git.io/JeuMm\";\n  }\n\n  match(astNode, astHelper, scope){\n    if (astNode.type !== 'NewExpression') return null;\n    if (astNode.callee.name !== 'BrowserWindow' && astNode.callee.name !== 'BrowserView') return null;\n\n    let location = [];\n\n    if (astNode.arguments.length > 0) {\n\n      var target = scope.resolveVarValue(astNode);\n\n      const found_nodes = astHelper.findNodeByType(target,\n        astHelper.PropertyName,\n        astHelper.PropertyDepth,\n        false,\n        node => (node.key.value === 'allowRunningInsecureContent' || node.key.name === 'allowRunningInsecureContent'));\n\n      for (const node of found_nodes) {\n        if (node.value.value === true) {\n          location.push({ line: node.key.loc.start.line, column: node.key.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.MEDIUM, confidence: confidence.CERTAIN, manualReview: false });\n        }\n      }\n    }\n\n    return location;\n  }\n}"]}