{"version":3,"sources":["../../../../../src/find/checks/AtomicChecks/5/PrivilegedSchemesRegistrationRemoval.js"],"names":["sourceTypes","severity","confidence","PrivilegedSchemesRegistrationRemoval","constructor","id","description","type","JAVASCRIPT","shortenedURL","match","astNode","astHelper","scope","callee","property","name","line","loc","start","column","HIGH","CERTAIN","manualReview"],"mappings":"AAAA,SAASA,WAAT,QAA4B,0BAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,qBAArC;;AAEA,eAAe,MAAMC,oCAAN,CAA2C;AACxDC,gBAAc;AACZ,SAAKC,EAAL,GAAU,yCAAV;AACA,SAAKC,WAAL,GAAmB,+HAAnB;AACA,SAAKC,IAAL,GAAYP,YAAYQ,UAAxB;AACA,SAAKC,YAAL,GAAoB,sBAApB;AACD;;AAEDC,QAAMC,OAAN,EAAeC,SAAf,EAA0BC,KAA1B,EAAgC;AAC9B,QAAIF,QAAQJ,IAAR,KAAiB,gBAArB,EAAuC,OAAO,IAAP;AACvC,QAAI,CAACI,QAAQG,MAAR,CAAeC,QAAhB,IACCJ,QAAQG,MAAR,CAAeC,QAAf,CAAwBC,IAAxB,KAAiC,+BAAjC,IACDL,QAAQG,MAAR,CAAeC,QAAf,CAAwBC,IAAxB,KAAiC,iCADhC,IAEDL,QAAQG,MAAR,CAAeC,QAAf,CAAwBC,IAAxB,KAAiC,yBAHrC,EAGiE;AAC/D,aAAO,IAAP;AACD;AACD,WAAO,CAAC,EAAEC,MAAMN,QAAQO,GAAR,CAAYC,KAAZ,CAAkBF,IAA1B,EAAgCG,QAAQT,QAAQO,GAAR,CAAYC,KAAZ,CAAkBC,MAA1D,EAAkEf,IAAI,KAAKA,EAA3E,EAA+EC,aAAa,KAAKA,WAAjG,EAA8GG,cAAc,KAAKA,YAAjI,EAA+IR,UAAUA,SAASoB,IAAlK,EAAwKnB,YAAYA,WAAWoB,OAA/L,EAAwMC,cAAc,KAAtN,EAAD,CAAP;AACD;AAjBuD","file":"PrivilegedSchemesRegistrationRemoval.js","sourcesContent":["import { sourceTypes } from '../../../../parser/types';\nimport { severity, confidence } from '../../../attributes';\n\nexport default class PrivilegedSchemesRegistrationRemoval {\n  constructor() {\n    this.id = 'PRIVILEGED_SCHEMES_REGISTRATION_REMOVAL';\n    this.description = '(ELECTRON 5) The APIs for Privileged Schemes Registration have been removed in favor of protocol.registerSchemesAsPrivileged.';\n    this.type = sourceTypes.JAVASCRIPT;\n    this.shortenedURL = 'https://git.io/JvVew';\n  }\n\n  match(astNode, astHelper, scope){\n    if (astNode.type !== 'CallExpression') return null;\n    if (!astNode.callee.property ||  \n        (astNode.callee.property.name !== 'registerURLSchemeAsPrivileged' &&\n        astNode.callee.property.name !== 'registerURLSchemeAsBypassingCSP' &&\n        astNode.callee.property.name !== 'registerStandardSchemes')) {\n      return null;\n    }\n    return [{ line: astNode.loc.start.line, column: astNode.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.HIGH, confidence: confidence.CERTAIN, manualReview: false }];\n  }\n}"]}