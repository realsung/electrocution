{"version":3,"sources":["../../../../src/find/checks/AtomicChecks/LimitNavigationJSCheck.js"],"names":["sourceTypes","severity","confidence","LimitNavigationJSCheck","constructor","id","description","type","JAVASCRIPT","shortenedURL","match","astNode","astHelper","callee","property","name","arguments","length","eventValue","value","StringLiteral","line","loc","start","column","HIGH","TENTATIVE","properties","manualReview"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;AAEA,eAAe,MAAMC,sBAAN,CAA6B;AAC1CC,gBAAc;AACZ,SAAKC,EAAL,GAAU,2BAAV;AACA,SAAKC,WAAL,GAAmB,mGAAnB;AACA,SAAKC,IAAL,GAAYP,YAAYQ,UAAxB;AACA,SAAKC,YAAL,GAAoB,sBAApB;AACD;;AAEDC,QAAMC,OAAN,EAAeC,SAAf,EAAyB;;AAEvB,QAAID,QAAQJ,IAAR,KAAiB,gBAArB,EAAuC,OAAO,IAAP;AACvC,QAAII,QAAQE,MAAR,CAAeC,QAAf,IAA2BH,QAAQE,MAAR,CAAeC,QAAf,CAAwBC,IAAxB,KAAiC,IAAhE,EAAsE;AACpE,UAAIJ,QAAQK,SAAR,IAAqBL,QAAQK,SAAR,CAAkBC,MAAlB,GAA2B,CAApD,EAAuD;AACrD,YAAIC,aAAaP,QAAQK,SAAR,CAAkB,CAAlB,EAAqBG,KAAtC;AACA,YAAIR,QAAQK,SAAR,CAAkB,CAAlB,EAAqBT,IAArB,KAA8BK,UAAUQ,aAAxC,KAA0DF,eAAe,eAAf,IAAkCA,eAAe,YAA3G,CAAJ,EAA8H;AAC5H,iBAAO,CAAC,EAAEG,MAAMV,QAAQW,GAAR,CAAYC,KAAZ,CAAkBF,IAA1B,EAAgCG,QAAQb,QAAQW,GAAR,CAAYC,KAAZ,CAAkBC,MAA1D,EAAkEnB,IAAI,KAAKA,EAA3E,EAA+EC,aAAa,KAAKA,WAAjG,EAA8GG,cAAc,KAAKA,YAAjI,EAA+IR,UAAUA,SAASwB,IAAlK,EAAwKvB,YAAYA,WAAWwB,SAA/L,EAA0MC,YAAY,EAAE,SAAUT,UAAZ,EAAtN,EAAgPU,cAAc,IAA9P,EAAD,CAAP;AACD;AACF;AACF;AACF;;AAnByC","file":"LimitNavigationJSCheck.js","sourcesContent":["import { sourceTypes } from '../../../parser/types';\nimport { severity, confidence } from '../../attributes';\n\nexport default class LimitNavigationJSCheck {\n  constructor() {\n    this.id = 'LIMIT_NAVIGATION_JS_CHECK';\n    this.description = 'Evaluate the implementation of the custom callback in the .on new-window and will-navigate events';\n    this.type = sourceTypes.JAVASCRIPT;\n    this.shortenedURL = \"https://git.io/JeuM3\";\n  }\n\n  match(astNode, astHelper){\n\n    if (astNode.type !== 'CallExpression') return null;\n    if (astNode.callee.property && astNode.callee.property.name === \"on\") {\n      if (astNode.arguments && astNode.arguments.length > 1) {\n        var eventValue = astNode.arguments[0].value;\n        if (astNode.arguments[0].type === astHelper.StringLiteral && (eventValue === \"will-navigate\" || eventValue === \"new-window\")) {\n          return [{ line: astNode.loc.start.line, column: astNode.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.HIGH, confidence: confidence.TENTATIVE, properties: { \"event\" : eventValue }, manualReview: true }];\n        }\n      }\n    }\n  }\n\n}\n"]}