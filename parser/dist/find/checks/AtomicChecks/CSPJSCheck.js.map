{"version":3,"sources":["../../../../src/find/checks/AtomicChecks/CSPJSCheck.js"],"names":["sourceTypes","severity","confidence","CSPJSCheck","constructor","id","description","type","JAVASCRIPT","shortenedURL","match","astNode","astHelper","location","left","property","value","toString","toLowerCase","push","line","loc","start","column","INFORMATIONAL","TENTATIVE","properties","right","manualReview","arguments","length","found_nodes","findNodeByType","PropertyName","PropertyDepth","node","key","name","elements","argument"],"mappings":"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","file":"CSPJSCheck.js","sourcesContent":["import { sourceTypes } from '../../../parser/types';\nimport { severity, confidence } from '../../attributes';\n\nexport default class CSPJSCheck {\n  constructor() {\n    this.id = 'CSP_JS_CHECK';\n    this.description = `Check for common responseHeaders CSP assignments`;\n    this.type = sourceTypes.JAVASCRIPT;\n    this.shortenedURL = \"https://git.io/JeuMe\";\n  }\n\n  match(astNode, astHelper){\n    let location = [];\n    // match e.g. details.responseHeaders[\"content-security-policy\"] = \"default-src 'self'\"; Note that this does not check if the assignment is inside in the responseHeaders object because of #32\n    if (astNode.type === \"AssignmentExpression\" && astNode.left.property && astNode.left.property.value && astNode.left.property.value.toString().toLowerCase() === \"content-security-policy\")\n      location.push({ line: astNode.loc.start.line, column: astNode.loc.start.column, id: this.id, description: this.description,severity: severity.INFORMATIONAL, confidence: confidence.TENTATIVE, properties: { \"CSPstring\": astNode.right.value }, manualReview: true });\n    else if (astNode.type == \"CallExpression\") {\n      if (astNode.arguments.length > 0) {\n        if (astNode.arguments[0].type !== \"ObjectExpression\") return null;\n        const found_nodes = astHelper.findNodeByType(astNode.arguments[0],\n          astHelper.PropertyName,\n          astHelper.PropertyDepth,\n          false,\n          node => (node.key.name === 'responseHeaders'));\n\n        for (const node of found_nodes) {\n          // match e.g. callback({ responseHeaders: { ...details.responseHeaders, \"Content-Security-Policy\": [\"default-src 'none'\"] }})\n          if (node.value.properties) {\n            for (const property of node.value.properties)\n              if (property.key && property.key.value && property.key.value.toLowerCase() === \"content-security-policy\")\n                location.push({ line: node.key.loc.start.line, column: node.key.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.INFORMATIONAL, confidence: confidence.TENTATIVE, properties: { \"CSPstring\": property.value.elements[0].value }, manualReview: true });\n          } // match callback({ responseHeaders: Object.assign({\"Content-Security-Policy\": [ \"default-src 'self'\" ]}, details.responseHeaders)}); as a popular stackoverflow answer suggests https://stackoverflow.com/questions/51969512/define-csp-http-header-in-electron-app\n          else if (node.value.type === 'CallExpression') {\n            if (node.value.arguments.length > 0) {\n              for (const argument of node.value.arguments)\n                if (argument.type === 'ObjectExpression')\n                  for (const property of argument.properties)\n                    if (property.key && property.key.value === 'Content-Security-Policy')\n                      location.push({ line: node.value.loc.start.line, column: node.value.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.INFORMATIONAL, confidence: confidence.TENTATIVE, properties: { \"CSPstring\": property.value.elements[0].value}, manualReview: true });  \n            }\n          }\n        }\n      }\n    }\n    return location;\n  }\n}"]}