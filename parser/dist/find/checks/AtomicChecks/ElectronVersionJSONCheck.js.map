{"version":3,"sources":["../../../../src/find/checks/AtomicChecks/ElectronVersionJSONCheck.js"],"names":["coerce","sourceTypes","severity","confidence","ElectronVersionJSONCheck","constructor","id","description","type","JSON","shortenedURL","match","content","electron","json","dependencies","undefined","electronDev","devDependencies","location","push","line","column","properties","raw","INFORMATIONAL","CERTAIN","manualReview"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;AAEA,eAAe,MAAMC,wBAAN,CAA+B;AAC5CC,gBAAc;AACZ,SAAKC,EAAL,GAAU,6BAAV;AACA,SAAKC,WAAL,GAAoB,qEAApB;AACA,SAAKC,IAAL,GAAYP,YAAYQ,IAAxB;AACA,SAAKC,YAAL,GAAoB,sBAApB;AACD;;AAED,QAAMC,KAAN,CAAYC,OAAZ,EAAoB;AAClB,UAAMC,WAAWD,QAAQE,IAAR,CAAaC,YAAb,IAA6B,cAAcH,QAAQE,IAAR,CAAaC,YAAxD,GAAuEf,OAAOY,QAAQE,IAAR,CAAaC,YAAb,CAA0BF,QAAjC,CAAvE,GAAoHG,SAArI;AACA,UAAMC,cAAcL,QAAQE,IAAR,CAAaI,eAAb,IAAgC,cAAcN,QAAQE,IAAR,CAAaI,eAA3D,GAA6ElB,OAAOY,QAAQE,IAAR,CAAaI,eAAb,CAA6BL,QAApC,CAA7E,GAA6HG,SAAjJ;;AAEA,QAAIG,WAAW,EAAf;AACA,QAAIN,QAAJ,EAAc;AACZM,eAASC,IAAT,CAAc,EAAEC,MAAM,CAAR,EAAWC,QAAQ,CAAnB,EAAsBhB,IAAI,KAAKA,EAA/B,EAAmCC,aAAa,KAAKA,WAArD,EAAkEG,cAAc,KAAKA,YAArF,EAAmGa,YAAY,EAAE,iBAAiBV,SAASW,GAA5B,EAA/G,EAAkJtB,UAAUA,SAASuB,aAArK,EAAoLtB,YAAYA,WAAWuB,OAA3M,EAAoNC,cAAc,KAAlO,EAAd;AACD;;AAED,QAAIV,WAAJ,EAAiB;AACfE,eAASC,IAAT,CAAc,EAAEC,MAAM,CAAR,EAAWC,QAAQ,CAAnB,EAAsBhB,IAAI,KAAKA,EAA/B,EAAmCC,aAAa,KAAKA,WAArD,EAAkEG,cAAc,KAAKA,YAArF,EAAmGa,YAAY,EAAE,iBAAiBN,YAAYO,GAA/B,EAA/G,EAAqJtB,UAAUA,SAASuB,aAAxK,EAAuLtB,YAAYA,WAAWuB,OAA9M,EAAuNC,cAAc,IAArO,EAAd;AACD;;AAED,WAAOR,QAAP;AACD;;AAtB2C","file":"ElectronVersionJSONCheck.js","sourcesContent":["import { coerce } from 'semver';\nimport { sourceTypes } from '../../../parser/types';\nimport { severity, confidence } from '../../attributes';\n\nexport default class ElectronVersionJSONCheck {\n  constructor() {\n    this.id = 'ELECTRON_VERSION_JSON_CHECK';\n    this.description = `Gets the electron version used by inspecting the package.json file.`;\n    this.type = sourceTypes.JSON;\n    this.shortenedURL = \"https://git.io/JeuMf\";\n  }\n\n  async match(content){\n    const electron = content.json.dependencies && 'electron' in content.json.dependencies ? coerce(content.json.dependencies.electron) : undefined;\n    const electronDev = content.json.devDependencies && 'electron' in content.json.devDependencies ? coerce(content.json.devDependencies.electron) : undefined;\n\n    let location = [];\n    if (electron) {\n      location.push({ line: 1, column: 0, id: this.id, description: this.description, shortenedURL: this.shortenedURL, properties: { \"versionNumber\": electron.raw }, severity: severity.INFORMATIONAL, confidence: confidence.CERTAIN, manualReview: false });\n    }\n\n    if (electronDev) {\n      location.push({ line: 1, column: 0, id: this.id, description: this.description, shortenedURL: this.shortenedURL, properties: { \"versionNumber\": electronDev.raw }, severity: severity.INFORMATIONAL, confidence: confidence.CERTAIN, manualReview: true });\n    }\n\n    return location;\n  }\n\n}\n"]}