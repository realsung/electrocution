{"version":3,"sources":["../../../../../src/find/checks/AtomicChecks/6/RequireElectronScreen.js"],"names":["sourceTypes","severity","confidence","RequireElectronScreen","constructor","id","description","type","JAVASCRIPT","shortenedURL","match","astNode","astHelper","scope","init","object","callee","name","arguments","value","property","line","loc","start","column","MEDIUM","TENTATIVE","manualReview","properties","key"],"mappings":"AAAA,SAASA,WAAT,QAA4B,0BAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,qBAArC;;AAEA,eAAe,MAAMC,qBAAN,CAA4B;AACzCC,gBAAc;AACZ,SAAKC,EAAL,GAAU,qCAAV;AACA,SAAKC,WAAL,GAAmB,kFAAnB;AACA,SAAKC,IAAL,GAAYP,YAAYQ,UAAxB;AACA,SAAKC,YAAL,GAAoB,sBAApB;AACD;;AAEDC,QAAMC,OAAN,EAAeC,SAAf,EAA0BC,KAA1B,EAAgC;AAC9B,QAAIF,QAAQJ,IAAR,KAAiB,oBAArB,EAA2C,OAAO,IAAP;AAC3C,QAAI,CAACI,QAAQG,IAAT,IAAkBH,QAAQG,IAAR,CAAaP,IAAb,KAAsB,kBAAtB,IAA4CI,QAAQG,IAAR,CAAaP,IAAb,KAAsB,gBAAxF,EAA2G,OAAO,IAAP;AAC3G,QAAII,QAAQG,IAAR,CAAaP,IAAb,KAAsB,kBAA1B,EAA8C;AAC5C,UAAI,CAACI,QAAQG,IAAR,CAAaC,MAAb,CAAoBC,MAArB,IAA+BL,QAAQG,IAAR,CAAaC,MAAb,CAAoBC,MAApB,CAA2BC,IAA3B,KAAoC,SAAvE,EAAkF,OAAO,IAAP;AAClF,UAAI,CAACN,QAAQG,IAAR,CAAaC,MAAb,CAAoBG,SAArB,IAAkCP,QAAQG,IAAR,CAAaC,MAAb,CAAoBG,SAApB,CAA8B,CAA9B,EAAiCC,KAAjC,KAA2C,UAAjF,EAA6F,OAAO,IAAP;AAC7F,UAAI,CAACR,QAAQG,IAAR,CAAaM,QAAd,IAA0BT,QAAQG,IAAR,CAAaM,QAAb,CAAsBH,IAAtB,KAA+B,QAA7D,EAAuE,OAAO,IAAP;AACvE,aAAO,CAAC,EAAEI,MAAMV,QAAQW,GAAR,CAAYC,KAAZ,CAAkBF,IAA1B,EAAgCG,QAAQb,QAAQW,GAAR,CAAYC,KAAZ,CAAkBC,MAA1D,EAAkEnB,IAAI,KAAKA,EAA3E,EAA+EC,aAAa,KAAKA,WAAjG,EAA8GG,cAAc,KAAKA,YAAjI,EAA+IR,UAAUA,SAASwB,MAAlK,EAA0KvB,YAAYA,WAAWwB,SAAjM,EAA4MC,cAAc,IAA1N,EAAD,CAAP;AACD,KALD,MAKO;AACL,UAAI,CAAChB,QAAQG,IAAR,CAAaE,MAAd,IAAwBL,QAAQG,IAAR,CAAaE,MAAb,CAAoBC,IAApB,KAA6B,SAAzD,EAAoE,OAAO,IAAP;AACpE,UAAI,CAACN,QAAQG,IAAR,CAAaI,SAAd,IAA2BP,QAAQG,IAAR,CAAaI,SAAb,CAAuB,CAAvB,EAA0BC,KAA1B,KAAoC,UAAnE,EAA+E,OAAO,IAAP;AAC/E,UAAI,CAACR,QAAQN,EAAT,IAAeM,QAAQN,EAAR,CAAWE,IAAX,KAAoB,eAAvC,EAAwD,OAAO,IAAP;AACxD,WAAK,MAAMa,QAAX,IAAuBT,QAAQN,EAAR,CAAWuB,UAAlC,EAA8C;AAC5C,YAAIR,SAASS,GAAT,IAAgBT,SAASS,GAAT,CAAaZ,IAA7B,IAAqCG,SAASS,GAAT,CAAaZ,IAAb,KAAsB,QAA/D,EAAyE;AACvE,iBAAO,CAAC,EAAEI,MAAMV,QAAQW,GAAR,CAAYC,KAAZ,CAAkBF,IAA1B,EAAgCG,QAAQb,QAAQW,GAAR,CAAYC,KAAZ,CAAkBC,MAA1D,EAAkEnB,IAAI,KAAKA,EAA3E,EAA+EC,aAAa,KAAKA,WAAjG,EAA8GG,cAAc,KAAKA,YAAjI,EAA+IR,UAAUA,SAASwB,MAAlK,EAA0KvB,YAAYA,WAAWwB,SAAjM,EAA4MC,cAAc,IAA1N,EAAD,CAAP;AACD;AACF;AACF;AACF;AA1BwC","file":"RequireElectronScreen.js","sourcesContent":["import { sourceTypes } from '../../../../parser/types';\nimport { severity, confidence } from '../../../attributes';\n\nexport default class RequireElectronScreen {\n  constructor() {\n    this.id = 'REQUIRE_ELECTRON_SCREEN_DEPRECATION';\n    this.description = '(ELECTRON 6) require(\\'electron\\').screen in the renderer process is deprecated.';\n    this.type = sourceTypes.JAVASCRIPT;\n    this.shortenedURL = 'https://git.io/JvalC';\n  }\n\n  match(astNode, astHelper, scope){    \n    if (astNode.type !== 'VariableDeclarator') return null;    \n    if (!astNode.init || (astNode.init.type !== 'MemberExpression' && astNode.init.type !== 'CallExpression')) return null;\n    if (astNode.init.type === 'MemberExpression') {      \n      if (!astNode.init.object.callee || astNode.init.object.callee.name !== 'require') return null;\n      if (!astNode.init.object.arguments || astNode.init.object.arguments[0].value !== 'electron') return null;\n      if (!astNode.init.property || astNode.init.property.name !== 'screen') return null;\n      return [{ line: astNode.loc.start.line, column: astNode.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.MEDIUM, confidence: confidence.TENTATIVE, manualReview: true }];\n    } else {\n      if (!astNode.init.callee || astNode.init.callee.name !== 'require') return null;\n      if (!astNode.init.arguments || astNode.init.arguments[0].value !== 'electron') return null;\n      if (!astNode.id || astNode.id.type !== 'ObjectPattern') return null;\n      for (const property of astNode.id.properties) {\n        if (property.key && property.key.name && property.key.name === 'screen') {\n          return [{ line: astNode.loc.start.line, column: astNode.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.MEDIUM, confidence: confidence.TENTATIVE, manualReview: true }];\n        }\n      }\n    }\n  }\n}"]}