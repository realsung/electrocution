{"version":3,"sources":["../../../../src/find/checks/AtomicChecks/RemoteModuleJSCheck.js"],"names":["sourceTypes","severity","confidence","RemoteModuleJSCheck","constructor","id","description","type","JAVASCRIPT","shortenedURL","match","astNode","astHelper","scope","defaults","callee","name","wasFound","loc","arguments","length","target","resolveVarValue","found_nodes","findNodeByType","PropertyName","PropertyDepth","node","key","value","push","line","start","column","MEDIUM","FIRM","manualReview","enableRemoteModule","TENTATIVE"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;AAEA,eAAe,MAAMC,mBAAN,CAA0B;AACvCC,gBAAc;AACZ,SAAKC,EAAL,GAAU,wBAAV;AACA,SAAKC,WAAL,GAAoB,2BAApB;AACA,SAAKC,IAAL,GAAYP,YAAYQ,UAAxB;AACA,SAAKC,YAAL,GAAoB,sBAApB;AACD;;AAEDC,QAAMC,OAAN,EAAeC,SAAf,EAA0BC,KAA1B,EAAiCC,QAAjC,EAA0C;AACxC,QAAIH,QAAQJ,IAAR,KAAiB,eAArB,EAAsC,OAAO,IAAP;AACtC,QAAII,QAAQI,MAAR,CAAeC,IAAf,KAAwB,eAAxB,IAA2CL,QAAQI,MAAR,CAAeC,IAAf,KAAwB,aAAvE,EAAsF,OAAO,IAAP;;AAEtF,QAAIC,WAAW,KAAf;AACA,QAAIC,MAAM,EAAV;AACA,QAAIP,QAAQQ,SAAR,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;;AAEhC,UAAIC,SAASR,MAAMS,eAAN,CAAsBX,OAAtB,CAAb;;AAEA,YAAMY,cAAcX,UAAUY,cAAV,CAAyBH,MAAzB,EAClBT,UAAUa,YADQ,EAElBb,UAAUc,aAFQ,EAGlB,KAHkB,EAIlBC,QAASA,KAAKC,GAAL,CAASC,KAAT,KAAmB,oBAAnB,IAA2CF,KAAKC,GAAL,CAASZ,IAAT,KAAkB,oBAJpD,CAApB;;AAMA,WAAK,MAAMW,IAAX,IAAmBJ,WAAnB,EAAgC;AAC9BN,mBAAW,IAAX;AACA,YAAIU,KAAKE,KAAL,CAAWA,KAAX,KAAqB,KAAzB,EAAgC;AAC9B;AACD;AACDX,YAAIY,IAAJ,CAAS,EAAEC,MAAMJ,KAAKC,GAAL,CAASV,GAAT,CAAac,KAAb,CAAmBD,IAA3B,EAAiCE,QAAQN,KAAKC,GAAL,CAASV,GAAT,CAAac,KAAb,CAAmBC,MAA5D,EAAoE5B,IAAI,KAAKA,EAA7E,EAAiFC,aAAa,KAAKA,WAAnG,EAAgHG,cAAc,KAAKA,YAAnI,EAAiJR,UAAUA,SAASiC,MAApK,EAA4KhC,YAAYA,WAAWiC,IAAnM,EAAyMC,cAAc,KAAvN,EAAT;AACD;AACF;;AAED,QAAInB,QAAJ,EAAc;AACZ,aAAOC,GAAP;AACD,KAFD,MAEO,IAAIJ,SAASuB,kBAAb,EAAiC;AAAE;AACxC,aAAO,CAAC,EAAEN,MAAMpB,QAAQO,GAAR,CAAYc,KAAZ,CAAkBD,IAA1B,EAAgCE,QAAQtB,QAAQO,GAAR,CAAYc,KAAZ,CAAkBC,MAA1D,EAAkE5B,IAAI,KAAKA,EAA3E,EAA+EC,aAAa,KAAKA,WAAjG,EAA8GG,cAAc,KAAKA,YAAjI,EAA+IR,UAAUA,SAASiC,MAAlK,EAA0KhC,YAAYA,WAAWoC,SAAjM,EAA4MF,cAAc,IAA1N,EAAD,CAAP;AACD;AACF;AAtCsC","file":"RemoteModuleJSCheck.js","sourcesContent":["import { sourceTypes } from '../../../parser/types';\nimport { severity, confidence } from '../../attributes';\n\nexport default class RemoteModuleJSCheck {\n  constructor() {\n    this.id = 'REMOTE_MODULE_JS_CHECK';\n    this.description = `Disable the remote module`;\n    this.type = sourceTypes.JAVASCRIPT;\n    this.shortenedURL = \"https://git.io/JvqrQ\";\n  }\n\n  match(astNode, astHelper, scope, defaults){\n    if (astNode.type !== 'NewExpression') return null;\n    if (astNode.callee.name !== 'BrowserWindow' && astNode.callee.name !== 'BrowserView') return null;\n\n    let wasFound = false;\n    let loc = [];\n    if (astNode.arguments.length > 0) {\n\n      var target = scope.resolveVarValue(astNode);\n\n      const found_nodes = astHelper.findNodeByType(target,\n        astHelper.PropertyName,\n        astHelper.PropertyDepth,\n        false,\n        node => (node.key.value === 'enableRemoteModule' || node.key.name === 'enableRemoteModule'));\n\n      for (const node of found_nodes) {\n        wasFound = true;\n        if (node.value.value === false) {\n          continue;\n        }\n        loc.push({ line: node.key.loc.start.line, column: node.key.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.MEDIUM, confidence: confidence.FIRM, manualReview: false });\n      }\n    }\n\n    if (wasFound) {\n      return loc;\n    } else if (defaults.enableRemoteModule) { // in earlier versions, 'remote' is enabled by default (assuming nodeIntegration:true), which is a misconfiguration\n      return [{ line: astNode.loc.start.line, column: astNode.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.MEDIUM, confidence: confidence.TENTATIVE, manualReview: true }];\n    }\n  }\n}\n"]}