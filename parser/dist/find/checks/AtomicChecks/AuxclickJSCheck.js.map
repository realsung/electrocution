{"version":3,"sources":["../../../../src/find/checks/AtomicChecks/AuxclickJSCheck.js"],"names":["sourceTypes","severity","confidence","AuxclickJSCheck","constructor","id","description","type","JAVASCRIPT","shortenedURL","match","astNode","astHelper","scope","callee","name","location","arguments","length","target","resolveVarValue","found_nodes","findNodeByType","PropertyName","PropertyDepth","node","key","value","indexOf","push","line","loc","start","column","MEDIUM","FIRM","manualReview"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,kBAArC;;AAEA,eAAe,MAAMC,eAAN,CAAsB;AACnCC,gBAAc;AACZ,SAAKC,EAAL,GAAU,mBAAV;AACA,SAAKC,WAAL,GAAoB,iHAApB;AACA,SAAKC,IAAL,GAAYP,YAAYQ,UAAxB;AACA,SAAKC,YAAL,GAAoB,sBAApB;AACD;;AAEDC,QAAMC,OAAN,EAAeC,SAAf,EAA0BC,KAA1B,EAAiC;AAC/B,QAAIF,QAAQJ,IAAR,KAAiB,eAArB,EAAsC,OAAO,IAAP;AACtC,QAAII,QAAQG,MAAR,CAAeC,IAAf,KAAwB,eAAxB,IAA2CJ,QAAQG,MAAR,CAAeC,IAAf,KAAwB,aAAvE,EAAsF,OAAO,IAAP;;AAEtF,QAAIC,WAAW,EAAf;;AAEA,QAAIL,QAAQM,SAAR,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;;AAEhC,UAAIC,SAASN,MAAMO,eAAN,CAAsBT,OAAtB,CAAb;;AAEA,YAAMU,cAAcT,UAAUU,cAAV,CAAyBH,MAAzB,EAClBP,UAAUW,YADQ,EAElBX,UAAUY,aAFQ,EAGlB,KAHkB,EAIlBC,QAASA,KAAKC,GAAL,CAASC,KAAT,KAAmB,sBAAnB,IAA6CF,KAAKC,GAAL,CAASX,IAAT,KAAkB,sBAJtD,CAApB;;AAMA,UAAIM,YAAYH,MAAZ,GAAqB,CAAzB,EAA4B;AAC1B,aAAK,MAAMO,IAAX,IAAmBJ,WAAnB,EAAgC;AAC9B,cAAII,KAAKE,KAAL,CAAWA,KAAX,CAAiBC,OAAjB,CAAyB,UAAzB,KAAwC,CAAC,CAA7C,EAAgD;AAC9CZ,qBAASa,IAAT,CAAc,EAAEC,MAAML,KAAKC,GAAL,CAASK,GAAT,CAAaC,KAAb,CAAmBF,IAA3B,EAAiCG,QAAQR,KAAKC,GAAL,CAASK,GAAT,CAAaC,KAAb,CAAmBC,MAA5D,EAAoE5B,IAAI,KAAKA,EAA7E,EAAiFC,aAAa,KAAKA,WAAnG,EAAgHG,cAAc,KAAKA,YAAnI,EAAiJR,UAAUA,SAASiC,MAApK,EAA4KhC,YAAYA,WAAWiC,IAAnM,EAAyMC,cAAc,KAAvN,EAAd;AACD;AACF;AACF,OAND,MAOK;AACHpB,iBAASa,IAAT,CAAc,EAAEC,MAAMnB,QAAQoB,GAAR,CAAYC,KAAZ,CAAkBF,IAA1B,EAAgCG,QAAQtB,QAAQoB,GAAR,CAAYC,KAAZ,CAAkBC,MAA1D,EAAkE5B,IAAI,KAAKA,EAA3E,EAA+EC,aAAa,KAAKA,WAAjG,EAA8GG,cAAc,KAAKA,YAAjI,EAA+IR,UAAUA,SAASiC,MAAlK,EAA0KhC,YAAYA,WAAWiC,IAAjM,EAAuMC,cAAc,KAArN,EAAd;AACD;AAEF;;AAED,WAAOpB,QAAP;AACD;AAtCkC","file":"AuxclickJSCheck.js","sourcesContent":["import { sourceTypes } from '../../../parser/types';\nimport { severity, confidence } from '../../attributes';\n\nexport default class AuxclickJSCheck {\n  constructor() {\n    this.id = 'AUXCLICK_JS_CHECK';\n    this.description = `Limit navigation flows to untrusted origins. Middle-click may cause Electron to open a link within a new window`;\n    this.type = sourceTypes.JAVASCRIPT;\n    this.shortenedURL = \"https://git.io/Jeu1K\";\n  }\n\n  match(astNode, astHelper, scope) {\n    if (astNode.type !== 'NewExpression') return null;\n    if (astNode.callee.name !== 'BrowserWindow' && astNode.callee.name !== 'BrowserView') return null;\n\n    let location = [];\n\n    if (astNode.arguments.length > 0) {\n      \n      var target = scope.resolveVarValue(astNode);\n\n      const found_nodes = astHelper.findNodeByType(target,\n        astHelper.PropertyName,\n        astHelper.PropertyDepth,\n        false,\n        node => (node.key.value === 'disableBlinkFeatures' || node.key.name === 'disableBlinkFeatures'));\n\n      if (found_nodes.length > 0) {\n        for (const node of found_nodes) {\n          if (node.value.value.indexOf(\"Auxclick\") == -1) {\n            location.push({ line: node.key.loc.start.line, column: node.key.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.MEDIUM, confidence: confidence.FIRM, manualReview: false });\n          }\n        }\n      }\n      else {\n        location.push({ line: astNode.loc.start.line, column: astNode.loc.start.column, id: this.id, description: this.description, shortenedURL: this.shortenedURL, severity: severity.MEDIUM, confidence: confidence.FIRM, manualReview: false });\n      }\n      \n    }\n\n    return location;\n  }\n}"]}