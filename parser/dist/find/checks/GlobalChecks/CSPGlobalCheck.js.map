{"version":3,"sources":["../../../../src/find/checks/GlobalChecks/CSPGlobalCheck.js"],"names":["attributes","csp","logger","CSPGlobalCheck","constructor","id","description","NO_CSP","MAYBE_WEAK_CSP","WEAK_CSP","INVALID_CSP","depends","shortenedURL","perform","issues","returnableIssues","length","file","location","line","column","severity","MEDIUM","confidence","CERTAIN","manualReview","cspIssue","Array","isArray","visibility","excludesGlobal","includes","findings","parser","CspParser","properties","CSPstring","evaluator","CspEvaluator","Version","CSP3","evaluate","e","push","LOW","TENTATIVE","sample","finding","severities","HIGH","HIGH_MAYBE","MEDIUM_MAYBE","FIRM"],"mappings":"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","file":"CSPGlobalCheck.js","sourcesContent":["import * as attributes from '../../attributes';\nimport * as csp from '@doyensec/csp-evaluator';\nimport logger from 'winston';\n\nexport default class CSPGlobalCheck {\n\n  constructor() {\n    this.id = \"CSP_GLOBAL_CHECK\";\n    this.description = {  NO_CSP: \"No CSP has been detected in the target application\",\n      MAYBE_WEAK_CSP: \"One or more CSP directives detected seems to be vulnerable\",\n      WEAK_CSP: \"One or more CSP directives detected are vulnerable\",\n      INVALID_CSP: \"Failed to parse CSP, it may not be valid.\" };\n    this.depends = [\"CSPJSCheck\", \"CSPHTMLCheck\"];\n    this.shortenedURL = \"https://git.io/JeuMe\";\n  }\n\n  async perform(issues) {\n    var returnableIssues = [];\n\n    if (issues.length === 0) {\n      // No CSP detected\n      return [{ file: \"N/A\", location: {line: 0, column: 0}, id: this.id, description: this.description.NO_CSP, shortenedURL: this.shortenedURL, severity: attributes.severity.MEDIUM, confidence: attributes.confidence.CERTAIN, manualReview: false }];\n    } else {\n      // There is a CSP set\n      for (var cspIssue of issues) {\n        // checks visibility before going forward\n        if (Array.isArray(cspIssue.visibility.excludesGlobal) && !cspIssue.visibility.excludesGlobal.includes(this.id)) {\n          var confidence = 0; \n          var findings;\n          try {\n            var parser = new csp.CspParser(cspIssue.properties.CSPstring);\n            var evaluator = new csp.CspEvaluator(parser.csp, csp.Version.CSP3);\n            findings = evaluator.evaluate();\n          }\n          catch (e) {\n            returnableIssues.push({ file: cspIssue.file, location: cspIssue.location, id: this.id, description: this.description.INVALID_CSP, shortenedURL: this.shortenedURL, severity: attributes.severity.LOW, confidence: attributes.confidence.TENTATIVE, sample: cspIssue.properties.CSPstring, manualReview: true });\n            continue;\n          }\n\n          for (var finding of findings)\n            if (finding.severity === csp.severities.HIGH || finding.severity === csp.severities.MEDIUM)\n              confidence = 2;\n            else if (finding.severity === csp.severities.HIGH_MAYBE || finding.severity === csp.severities.MEDIUM_MAYBE)\n              if (confidence < 2) confidence = 1;\n\n      if (confidence === 2) \n        returnableIssues.push({ file: cspIssue.file, location: cspIssue.location, id: this.id, description: this.description.WEAK_CSP, shortenedURL: this.shortenedURL, severity: attributes.severity.LOW, confidence: attributes.confidence.CERTAIN, sample: cspIssue.properties.CSPstring, manualReview: false });\n      if (confidence === 1)\n        returnableIssues.push({ file: cspIssue.file, location: cspIssue.location, id: this.id, description: this.description.MAYBE_WEAK_CSP, shortenedURL: this.shortenedURL, severity: attributes.severity.LOW, confidence: attributes.confidence.FIRM, sample: cspIssue.properties.CSPstring, manualReview: true });\n\n      }\n    }\n\n    return returnableIssues;\n\n    }\n  }\n}\n"]}