{"version":3,"sources":["../../src/utils/map.js"],"names":["map_to_string","map","str","key","value","entries","parseWebPreferencesFeaturesString","features","webPreferences","parseFeaturesString","undefined","emit","split","forEach","feature","module","exports"],"mappings":";AACA;;;;AAIA,SAASA,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,MAAIC,MAAM,EAAV;AACA,OAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BH,IAAII,OAAJ,EAA3B,EAA0C;AACxCH,WAAQ,GAAEC,GAAI,OAAMC,KAAM,EAA1B;AACD;AACD,SAAOF,GAAP;AACH;;AAED;;;;AAIA,SAASI,iCAAT,CAA2CC,QAA3C,EAAqD;AACjD,MAAIC,iBAAiB,EAArB;;AAEAC,sBAAoBF,QAApB,EAA8B,UAAUJ,GAAV,EAAeC,KAAf,EAAsB;AAClD,QAAIA,UAAUM,SAAd,EAAyB;AACvBN,cAAQ,IAAR;AACD;AACDI,mBAAeL,GAAf,IAAsBC,KAAtB;AACD,GALD;;AAOA,SAAOI,cAAP;AACH;;AAED;;;;;AAKA,SAASC,mBAAT,CAA6BF,QAA7B,EAAuCI,IAAvC,EAA6C;AACzCJ,aAAY,GAAEA,QAAS,EAAvB;AACAA,WAASK,KAAT,CAAe,MAAf,EAAuBC,OAAvB,CAAgCC,OAAD,IAAa;AAC1C,QAAI,CAACX,GAAD,EAAMC,KAAN,IAAeU,QAAQF,KAAR,CAAc,MAAd,CAAnB;AACA,QAAI,CAACT,GAAL,EAAU;;AAEVC,YAASA,UAAU,KAAV,IAAmBA,UAAU,GAA7B,IAAoCA,UAAU,MAA/C,GAAyD,IAAzD,GAAiEA,UAAU,IAAV,IAAkBA,UAAU,GAA5B,IAAmCA,UAAU,OAA9C,GAAyD,KAAzD,GAAiEA,KAAzI;AACAO,SAAKR,GAAL,EAAUC,KAAV;AACD,GAND;AAOH;;AAEDW,OAAOC,OAAP,GAAiB;AACbhB,eADa;AAEbM,mCAFa;AAGbG;AAHa,CAAjB","file":"map.js","sourcesContent":["\n/**\n * \n * @param {Map} map \n */\nfunction map_to_string(map) {\n    let str = '';\n    for (const [key, value] of map.entries()) {\n      str += `${key} => ${value}`;\n    }\n    return str;\n}\n  \n/**\n * \n * @param {String || any} features \n */\nfunction parseWebPreferencesFeaturesString(features) {\n    let webPreferences = {};\n  \n    parseFeaturesString(features, function (key, value) {\n      if (value === undefined) {\n        value = true;\n      }\n      webPreferences[key] = value;\n    });\n  \n    return webPreferences;\n}\n  \n/**\n * \n * @param {String || any} features \n * @param {String || any} emit \n */\nfunction parseFeaturesString(features, emit) {\n    features = `${features}`;\n    features.split(/,\\s*/).forEach((feature) => {\n      let [key, value] = feature.split(/\\s*=/);\n      if (!key) return;\n  \n      value = (value === 'yes' || value === '1' || value === 'true') ? true : (value === 'no' || value === '0' || value === 'false') ? false : value;\n      emit(key, value);\n    });\n}\n\nmodule.exports = {\n    map_to_string,\n    parseWebPreferencesFeaturesString,\n    parseFeaturesString\n}"]}