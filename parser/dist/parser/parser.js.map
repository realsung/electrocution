{"version":3,"sources":["../../src/parser/parser.js"],"names":["esprima_parse","require","babelParser","typescriptEstreeParser","cheerio_load","extension","Type","sourceExtensions","EsprimaAst","BabelAst","ESLintAst","TreeSettings","Scope","Parser","constructor","babelFirst","typescriptBabelFirst","esLintESTreeAst","esLintBabelTreeAst","propertyName","stringLiteral","babelAst","esprimaAst","babelPlugins","tsPlugins","addPlugin","plugin","push","parseEsprima","content","data","loc","tolerant","jsx","astParser","parseBabel","parse","sourceType","plugins","ecmaFeatures","modules","program","parseTypeScript","resolveVarValue","astNode","arguments","updateFunctionScope","parseTypescriptEstree","range","tokens","errorOnUnknownASTType","useJSXTextNode","filename","ext","toString","JAVASCRIPT","replace","m","Array","length","join","error1","error2","error","HTML","xmlMode","withStartIndices","lowerCaseTags","lowerCaseAttributeNames","JSON","json","text","errors","undefined","module","exports"],"mappings":"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","file":"parser.js","sourcesContent":["const esprima_parse = require(\"esprima\");\nconst babelParser = require(\"@babel/parser\");\nconst typescriptEstreeParser = require(\"@typescript-eslint/typescript-estree\");\nconst cheerio_load = require(\"cheerio\");\n\nconst { extension } = require(\"../utils\");\nconst { Type, sourceExtensions } = require(\"./types\");\n\nconst {  EsprimaAst, BabelAst, ESLintAst, TreeSettings, Scope } = require(\"../find\");\n\nclass Parser {\n    constructor(babelFirst, typescriptBabelFirst) {\n        this.esLintESTreeAst = new ESLintAst(new TreeSettings());\n        this.esLintBabelTreeAst = new ESLintAst(new TreeSettings({propertyName: 'ObjectProperty', stringLiteral: 'StringLiteral'}));\n        this.babelAst = new BabelAst(new TreeSettings({propertyName: 'ObjectProperty', stringLiteral: 'StringLiteral'}));\n        this.esprimaAst = new EsprimaAst(new TreeSettings());\n\n        this.babelFirst = babelFirst;\n        this.typescriptBabelFirst = typescriptBabelFirst;\n\n        this.babelPlugins = [\n            \"jsx\",\n            \"objectRestSpread\",\n            \"classProperties\",\n            \"optionalCatchBinding\",\n            \"asyncGenerators\",\n            \"decorators-legacy\",\n            \"flow\",\n            \"dynamicImport\",\n            \"estree\",\n          ]\n      \n        this.tsPlugins = [\n            \"jsx\",\n            \"objectRestSpread\",\n            \"classProperties\",\n            \"optionalCatchBinding\",\n            \"asyncGenerators\",\n            \"decorators-legacy\",\n            \"typescript\",\n            \"dynamicImport\",\n        ]\n    }\n\n    addPlugin(plugin) {\n        this.tsPlugins.push(plugin);\n        this.babelPlugins.push(plugin);\n    }\n\n    parseEsprima(content) {\n        let data = esprima_parse(content, { loc: true, tolerant: true, jsx: true });\n        data.astParser = this.esprimaAst;\n        data.Scope = new Scope(data);\n        return data;\n    }\n\n    parseBabel(content) {\n        let data = babelParser.parse(content, {\n          sourceType: \"module\",\n          plugins: this.babelPlugins,\n          ecmaFeatures: {\n              modules: true\n          }\n        }).program;\n    \n        data.astParser = this.esprimaAst;\n        data.Scope = new Scope(data);\n        return data;\n    }\n\n    parseTypeScript(content) {\n        let data = babelParser.parse(content, {\n          sourceType: \"module\",\n          plugins: this.tsPlugins\n        });\n    \n        data.astParser = this.esLintBabelTreeAst;\n        data.Scope = {}; \n        data.Scope.resolveVarValue = (astNode) => astNode.arguments[0];\n        data.Scope.updateFunctionScope = () => {};\n        return data;\n    }\n\n    parseTypescriptEstree(content) {\n        let data = typescriptEstreeParser.parse(content, {\n          loc: true,\n          range: true,\n          tokens: true,\n          errorOnUnknownASTType: true,\n          useJSXTextNode: true,\n          ecmaFeatures: {\n            jsx: true,\n            modules: true\n          }\n        });\n    \n        data.astParser = this.esLintESTreeAst;\n        data.Scope = {}; \n        data.Scope.resolveVarValue = (astNode) => astNode.arguments[0];\n        data.Scope.updateFunctionScope = () => {};\n        return data;\n    }\n\n    parse(filename, content) {\n        const ext = extension(filename);\n    \n        const sourceType = sourceExtensions[ext];\n        content = content.toString();\n        let data = null;\n    \n        switch (sourceType) {\n          case Type.JAVASCRIPT:\n            content = content.replace(/(^#!.*)/, function(m) { return Array(m.length + 1).join(' '); });\n    \n            if(ext === 'ts' || ext === 'tsx') {\n              try {\n                data = this.typescriptBabelFirst ? this.parseTypeScript(content) : this.parseTypescriptEstree(content);\n              } catch (error1) {\n                try {\n                  data = this.typescriptBabelFirst ? this.parseTypescriptEstree(content) : this.parseTypeScript(content);\n                } catch (error2) {\n                  throw this.typescriptBabelFirst ? error1 : error2; \n                }\n              }\n              break;\n            }\n    \n            try {\n              data = this.babelFirst ? this.parseBabel(content) : this.parseEsprima(content);\n            } catch (error) {\n              data = this.babelFirst ? this.parseEsprima(content) : this.parseBabel(content);\n            }\n            break;\n          case Type.HTML:\n            data = cheerio_load(content, { xmlMode: true, withStartIndices: true, lowerCaseTags: true, lowerCaseAttributeNames: true });\n            break;\n          case Type.JSON:\n            data = {json: JSON.parse(content), text: content};\n            break;\n          default:\n            break;\n        }\n    \n        return [sourceType, data, content, data ? data.errors : undefined];\n    }\n}\n\nmodule.exports = {\n    Parser\n}"]}