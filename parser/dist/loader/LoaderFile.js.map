{"version":3,"sources":["../../src/loader/LoaderFile.js"],"names":["read_file","require","Loader","fs","path","LoaderFile","constructor","load","file","filename","resolve","existsSync","Error","_loaded","add","load_buffer","module","exports"],"mappings":";;AAEA,MAAM,EAAEA,SAAF,KAAgBC,QAAQ,UAAR,CAAtB;AACA,MAAM,EAAEC,MAAF,KAAaD,QAAQ,aAAR,CAAnB;;AAEA,MAAME,KAAKF,QAAQ,IAAR,CAAX;AACA,MAAMG,OAAOH,QAAQ,MAAR,CAAb;;AAEA,MAAMI,UAAN,SAAyBH,MAAzB,CAAgC;AAC5BI,kBAAc;AACV;AACH;;AAED;;;;AAIAC,SAAKC,IAAL,EAAW;AACP,cAAMC,WAAWL,KAAKM,OAAL,CAAaF,IAAb,CAAjB;AACA,YAAG,CAACL,GAAGQ,UAAH,CAAcF,QAAd,CAAJ,EAA6B;AACzB,kBAAM,IAAIG,KAAJ,CAAW,QAAOH,QAAS,aAA3B,CAAN;AACH;AACD,aAAKI,OAAL,CAAaC,GAAb,CAAiBL,QAAjB;AACH;;AAED;;;;AAIAM,gBAAYN,QAAZ,EAAsB;AAClB,eAAOT,UAAUS,QAAV,CAAP;AACH;AAvB2B;;AA0BhCO,OAAOC,OAAP,GAAiB;AACbZ;AADa,CAAjB","file":"LoaderFile.js","sourcesContent":["\n\nconst { read_file } = require(\"../utils\");\nconst { Loader } = require(\"./interface\");\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nclass LoaderFile extends Loader {\n    constructor() {\n        super();\n    }\n\n    /**\n     * \n     * @param {File} file \n     */\n    load(file) {\n        const filename = path.resolve(file);\n        if(!fs.existsSync(filename)) {\n            throw new Error(`File ${filename} not found.`);\n        }\n        this._loaded.add(filename);\n    }\n\n    /**\n     * \n     * @param {String} filename \n     */\n    load_buffer(filename) {\n        return read_file(filename);\n    }\n}\n\nmodule.exports = {\n    LoaderFile\n}"]}